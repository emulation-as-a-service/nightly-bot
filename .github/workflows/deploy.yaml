name: Deploy to fresh VM

on:
  schedule:
    - cron: 30 03 * * *
  push:
  workflow_dispatch:
    inputs:
      hostname:
        type: string
        default: nightly
      domain:
        type: string
      flavor:
        description:
          Flavor to use for VM (see <https://www.ovhcloud.com/en-ie/public-cloud/prices/>)
        type: string
        default: d2-8
      env:
        description:
          Environment for https://eaas.dev/eaas-installer/blob/@/scripts/install-test-server.py#L57
          (in addition to individual inputs below)
        type: string
        default: eaasi_ui_version=testing https=1 acmesh=zerossl setup_keycloak=1 import_test_environments=1 show_summary=1
      eaas_version:
        type: string
      demo_ui_version:
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.hostname || vars.hostname }}
      url: https://${{ env.hostname }}.${{ env.domain }}
    steps:
      - uses: actions/checkout@HEAD
      - name: Create new VM and start EaaS installation using https://eaas.dev/eaas-installer/blob/@/scripts/manage-test-servers-openstack.py
        run: |
          (test "$ssh_key" && printf '%s\n' "$ssh_key" || echo y | ssh-keygen -q -t ed25519 -C "" -N "" -f /dev/stderr 2>&1 >/dev/null | sed -n /---BEGIN/,/---END/p) | install -D -m 0600 /dev/stdin ~/.ssh/id_ed25519
          ssh-keygen -y -f ~/.ssh/id_ed25519 | tee /dev/stderr >> ssh_keys
          sudo apt-get update && sudo apt-get install -y python3-openstacksdk
          git clone https://eaas.dev/eaas-installer
          cd eaas-installer
          git clone "$dns_token_git_url"
          printf %s "$clouds_yaml" > clouds.yaml
          : "${flavor:=d2-8}"
          : "${env:=eaasi_ui_version=testing https=1 acmesh=zerossl setup_keycloak=1 import_test_environments=1 show_summary=1}"
          set -f
          set -- $env             
          set +f
          if test "${eaas_version-}"; then
            set -- "$@" "eaas_version=$eaas_version"
          fi
          if test "${demo_ui_version-}"; then
            set -- "$@" "demo_ui_version=$demo_ui_version"
          fi
          scripts/manage-test-servers-openstack.py -p "eaas-test-$hostname" -d "$domain" create -f "$flavor" -s ../ssh_keys --hostname "$hostname" "$@"
          scripts/manage-test-servers-openstack.py -p "eaas-test-$hostname" -d "$domain" cleanup -k 1
      - name: EaaS installation log
        run: |
          sleep 30
          while :; do
            if
              (
                ssh -T -o ServerAliveInterval=30 -o StrictHostKeyChecking=accept-new "ubuntu@$hostname.$domain" -- tail -F /eaas-home/log/server/server.log "&" journalctl -f -u cloud-final -u eaas </dev/null | tee /dev/stderr &
              ) | grep -qF '</details>'
            then
              break
            fi
          done
        timeout-minutes: 45
    env:
      ssh_key: ${{ secrets.ssh_key }}
      dns_token_git_url: ${{ secrets.dns_token_git_url }}
      clouds_yaml: ${{ secrets.clouds_yaml }}
      domain: ${{ inputs.domain || vars.domain }}
      hostname: ${{ inputs.hostname || vars.hostname }}
      flavor: ${{ inputs.flavor }}
      env: ${{ inputs.env }}
      eaas_version: ${{ inputs.eaas_version }}
      demo_ui_version: ${{ inputs.demo_ui_version }}
